# Generated by Django 3.1a1 on 2020-06-29 06:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Basis',
            fields=[
                ('id', models.AutoField(help_text='Primary key for Base class.', primary_key=True, serialize=False)),
                ('last_modified', models.DateTimeField(auto_now=True, help_text='Date the class was last modified')),
                ('tag', models.CharField(blank=True, help_text='User defined tag for easy searches', max_length=200, null=True)),
                ('n_fields', models.PositiveIntegerField(default=1, help_text='Number of field occurances.')),
            ],
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.AutoField(help_text='Primary key for Base class.', primary_key=True, serialize=False)),
                ('last_modified', models.DateTimeField(auto_now=True, help_text='Date the class was last modified')),
                ('tag', models.CharField(blank=True, help_text='User defined tag for easy searches', max_length=200, null=True)),
                ('kind', models.CharField(help_text="Kind of operator like 'quark'  or 'nucleon'.", max_length=256)),
                ('name', models.CharField(help_text="Descriptive name like 'up quark' or 'proton'.", max_length=256)),
                ('label', models.CharField(help_text="Which version of d.o.f., e.g., specifying flavor ('up') or strong isospin ('proton').", max_length=256)),
                ('symbol', models.CharField(help_text='Mathematical symbol representing the d.o.f.', max_length=24)),
                ('user', models.ForeignKey(blank=True, help_text='User who updated this object. Set on save by connection to database. Anonymous if not found.', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('kind', 'label')},
            },
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id', models.AutoField(help_text='Primary key for Base class.', primary_key=True, serialize=False)),
                ('last_modified', models.DateTimeField(auto_now=True, help_text='Date the class was last modified')),
                ('tag', models.CharField(blank=True, help_text='User defined tag for easy searches', max_length=200, null=True)),
                ('name', models.CharField(help_text='Name of the operator which can be used for searches.', max_length=256)),
                ('expression', models.TextField(help_text='Fully qualified term discribing operator including creation and annihilation operators.', unique=True)),
                ('kind', models.CharField(choices=[('s', 'Scalar'), ('v', 'Vector'), ('ps', 'Pseudo Scalar'), ('pv', 'Pseudo Vector'), ('t', 'Tensor'), ('pt', 'Pseudo Tensor')], help_text='Which kind of spin interactions describe this operator?', max_length=2)),
                ('charge', models.IntegerField(help_text='Charge transformation behavior of operator.')),
                ('parity', models.IntegerField(help_text='Parity transformation behavior of operator.')),
                ('time', models.IntegerField(help_text='Time transformation behavior of operator.')),
                ('details', models.JSONField(blank=True, help_text='Further optional information to specify the operator.', null=True)),
                ('fields', models.ManyToManyField(help_text='Fields present in the operator (e.g., up-quark fields).', through='operators.Basis', to='operators.Field')),
                ('user', models.ForeignKey(blank=True, help_text='User who updated this object. Set on save by connection to database. Anonymous if not found.', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(help_text='Primary key for Base class.', primary_key=True, serialize=False)),
                ('last_modified', models.DateTimeField(auto_now=True, help_text='Date the class was last modified')),
                ('tag', models.CharField(blank=True, help_text='User defined tag for easy searches', max_length=200, null=True)),
                ('arxiv_id', models.CharField(help_text="Arxiv qualifier like '2000.01234'.", max_length=20)),
                ('authors', models.TextField(help_text='Authors of the reference as comma seperated list.')),
                ('title', models.CharField(help_text='Title of the publication.', max_length=256)),
                ('journal', models.CharField(blank=True, help_text='Journal qualifier of the publication.', max_length=256, null=True)),
                ('url', models.URLField(blank=True, help_text='Link to access the publication, e.g., inspirehep.net link.', null=True)),
                ('misc', models.JSONField(blank=True, help_text='Additional optional information.', null=True)),
                ('user', models.ForeignKey(blank=True, help_text='User who updated this object. Set on save by connection to database. Anonymous if not found.', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OperatorRelation',
            fields=[
                ('id', models.AutoField(help_text='Primary key for Base class.', primary_key=True, serialize=False)),
                ('last_modified', models.DateTimeField(auto_now=True, help_text='Date the class was last modified')),
                ('factor', models.TextField(help_text="Factor associated with the propagation of scales. E.g., 'source -> factor * target' at 'order'.")),
                ('order', models.JSONField(blank=True, help_text='Additional information allowing to order different operators by their relevance. E.g., chiral power counting scheme.', null=True)),
                ('tag', models.CharField(help_text='Key for grouping different schemes to form a complete representation (e.g., if an expansion scheme is workout over several publications.)', max_length=256)),
                ('references', models.ManyToManyField(help_text='Publications specifying the operator relationship.', to='operators.Publication')),
                ('source', models.ForeignKey(help_text='More fundamental operator as a source for the propagation of scales.', on_delete=django.db.models.deletion.CASCADE, related_name='source_for', to='operators.operator')),
                ('target', models.ForeignKey(help_text='Operator as a source for the propagation of scales.', on_delete=django.db.models.deletion.CASCADE, related_name='target_of', to='operators.operator')),
                ('user', models.ForeignKey(blank=True, help_text='User who updated this object. Set on save by connection to database. Anonymous if not found.', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='basis',
            name='field',
            field=models.ForeignKey(help_text='Field present in operator representation.', on_delete=django.db.models.deletion.CASCADE, to='operators.field'),
        ),
        migrations.AddField(
            model_name='basis',
            name='operator',
            field=models.ForeignKey(help_text='The operator to represent.', on_delete=django.db.models.deletion.CASCADE, to='operators.operator'),
        ),
        migrations.AddField(
            model_name='basis',
            name='user',
            field=models.ForeignKey(blank=True, help_text='User who updated this object. Set on save by connection to database. Anonymous if not found.', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='basis',
            unique_together={('field', 'operator', 'n_fields')},
        ),
    ]
