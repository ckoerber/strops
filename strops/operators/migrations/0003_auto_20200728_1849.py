# Generated by Django 3.1rc1 on 2020-07-28 18:49

from django.db import migrations, models
import django.db.models.deletion
import strops.utils.fields


class Migration(migrations.Migration):

    dependencies = [
        ('operators', '0002_auto_20200707_0959'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='operator',
            name='charge',
        ),
        migrations.RemoveField(
            model_name='operator',
            name='lorentz',
        ),
        migrations.RemoveField(
            model_name='operator',
            name='parity',
        ),
        migrations.RemoveField(
            model_name='operator',
            name='time',
        ),
        migrations.AlterField(
            model_name='field',
            name='kind',
            field=models.CharField(choices=[('up', 'up'), ('down', 'down'), ('strange', 'strange'), ('dm', 'Dark Matter'), ('proton', 'proton'), ('neutron', 'neutron'), ('pion', 'pion'), ('dm', 'Dark Matter'), ('proton', 'proton'), ('neutron', 'neutron'), ('pion', 'pion'), ('dm', 'Dark Matter')], help_text="Descriptive name like 'up' for the quark scale or 'proton' for the nucleon scale.", max_length=256),
        ),
        migrations.CreateModel(
            name='FourFieldOperator',
            fields=[
                ('operator_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='operators.operator')),
                ('matrix1', strops.utils.fields.SympyField(encoder='non-commutative-expression', help_text='Term representing the spin operator between field one and two. For example $\\gamma_5$')),
                ('matrix2', strops.utils.fields.SympyField(encoder='non-commutative-expression', help_text='Term representing the spin operator between field two and three')),
                ('matrix3', strops.utils.fields.SympyField(encoder='non-commutative-expression', help_text='Term representing the spin operator between field three and four')),
                ('field1', models.ForeignKey(help_text='Conjugated field present on the left of the operator expression (e.g., Bar(u)).', on_delete=django.db.models.deletion.CASCADE, related_name='operators_41', to='operators.field')),
                ('field2', models.ForeignKey(help_text='Second field (from left) of the operator expression (e.g., d).', on_delete=django.db.models.deletion.CASCADE, related_name='operators_42', to='operators.field')),
                ('field3', models.ForeignKey(help_text='Third field (from left) of the operator expression (e.g., d)..', on_delete=django.db.models.deletion.CASCADE, related_name='operators_43', to='operators.field')),
                ('field4', models.ForeignKey(help_text='Last field (e.g., on the right side) of the operator expression.', on_delete=django.db.models.deletion.CASCADE, related_name='operators_44', to='operators.field')),
            ],
            options={
                'unique_together': {('field1', 'matrix1', 'field2', 'matrix2', 'field3', 'matrix3', 'field4')},
            },
            bases=('operators.operator',),
        ),
    ]
